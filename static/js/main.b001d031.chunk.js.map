{"version":3,"sources":["components/Navigation/Nagivation.js","components/Title/Title.js","components/Avatar/avatar01.jpg","components/Avatar/Avatar.js","containers/HomePage.js","containers/App.js","serviceWorker.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","route","className","onClick","Title","options","wrapperClassName","cursorClassName","loop","delay","deleteSpeed","onInit","typewriter","typeString","pauseFor","deleteChars","start","Avatar","src","img","alt","HomePage","App","useState","setRoute","ProjectsPage","lazy","then","module","default","AboutMe","Contact","fallback","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b001d031.chunk.js","sourcesContent":["const Navigation = ({ onRouteChange, route }) => {\r\n    return (\r\n        <nav className=\"mr5-l flex flex-wrap justify-end-l justify-center items-baseline\">\r\n            <p\r\n                className={route === 'home' ? (\r\n                    \"f4-l f7 fw9 link hover-white black ph2-l pr1 pl0 pointer white mb0\"\r\n                ) : (\r\n                    \"f4-l f7 link hover-white black ph2-l pr1 pl0 pointer silver mb0\"\r\n                )\r\n                }\r\n                onClick={() => onRouteChange('home')}\r\n            >\r\n                00 : Home\r\n            </p>\r\n            <p className=\"f3-l f6 fw9 link hover-black blph2-l pr1 pl0 pointer gray mb0\"> | </p>\r\n            <p\r\n                className={route === 'projects' ? (\r\n                    \"f4-l f7 fw9 link hover-black black ph2-l pr1 pl0 pointer black mb0\"\r\n                ) : (\r\n                    \"f4-l f7 link hover-black black ph2-l pr1 pl0 pointer silver mb0\"\r\n                )\r\n                }\r\n                onClick={() => onRouteChange('projects')}\r\n            >\r\n                01 : Projects\r\n            </p>\r\n            <p className=\"f3-l f6 fw9 link hover-black blph2-l pr1 pl0 pointer gray mb0\"> | </p>\r\n            <p\r\n                className={route === 'aboutMe' ? (\r\n                    \"f4-l f7 fw9 link hover-black black ph2-l pr1 pl0 pointer black mb0\"\r\n                ) : (\r\n                    \"f4-l f7 link hover-black black ph2-l pr1 pl0 pointer silver mb0\"\r\n                )\r\n                }\r\n                onClick={() => onRouteChange('aboutMe')}\r\n            >\r\n                02 : About Me\r\n            </p>\r\n            <p className=\"f3-l f6 fw9 link hover-black blph2-l pr1 pl0 pointer gray mb0\"> | </p>\r\n            <p\r\n                className={route === 'contact' ? (\r\n                    \"f4-l f7 fw9 link hover-black black ph2-l pr0 pl0 pointer black mb0\"\r\n                ) : (\r\n                    \"f4-l f7 link hover-black black ph2-l pr0 pl0 pointer silver mb0\"\r\n                )\r\n                }\r\n                onClick={() => onRouteChange('contact')}\r\n            >\r\n                03 : Contact\r\n            </p>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport { Navigation };","import Typewriter from 'typewriter-effect';\r\nconst Title = () => {\r\n\r\n    return (\r\n        <div className=\"ml7-l mt0-l ml3 mt2\">\r\n            <Typewriter\r\n                options={{\r\n                    wrapperClassName: \"f1-l f4 fw9 Typewriter__wrapper white\",\r\n                    cursorClassName: \"f1-l f4 Typewriter__cursor white\",\r\n                    loop: true,\r\n                    delay: 35,\r\n                    deleteSpeed: 15\r\n                }}\r\n                onInit={(typewriter) => {\r\n                    typewriter\r\n                        .typeString('Hello, I am ')\r\n                        .typeString('Yeatin Huang')\r\n                        .pauseFor(1500)\r\n                        .deleteChars(12)\r\n                        .typeString('a Web Developer')\r\n                        .pauseFor(1500)\r\n                        .deleteChars(15)\r\n                        .typeString('Looking for a job')\r\n                        .pauseFor(1500)\r\n                        .deleteChars(17)\r\n                        .start();\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Title };","export default __webpack_public_path__ + \"static/media/avatar01.bce39dba.jpg\";","import img from \"./avatar01.jpg\";\r\n\r\nconst Avatar = () => {\r\n    return (\r\n        <img src={img} className=\"grow ml6-l ml2 mt6 mb2 br-100 pa1 ba b--white-70 h4 w4\" alt=\"my face\"></img>\r\n    )\r\n}\r\n\r\nexport { Avatar }","import { Title } from '../components/Title/Title';\r\nimport { Avatar } from '../components/Avatar/Avatar';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div>\r\n            <Avatar />\r\n            <Title />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { HomePage };","import { useState, lazy, Suspense } from 'react';\nimport { Navigation } from '../components/Navigation/Nagivation';\nimport { HomePage } from './HomePage';\nimport './App.css';\n\nconst App = () => {\n  const [route, setRoute] = useState('home');\n\n  const ProjectsPage = lazy(() => import('./ProjectsPage').then(module => ({ default: module.ProjectsPage })));\n  const AboutMe = lazy(() => import('./AboutMe').then(module => ({ default: module.AboutMe })));\n  const Contact = lazy(() => import('./Contact').then(module => ({ default: module.Contact })));\n\n  const onRouteChange = (route) => {\n    setRoute(route);\n  }\n\n  return (\n    <div>\n      {\n        route === \"home\"\n          ? <div className=\"home\">\n            <Navigation onRouteChange={onRouteChange} route={route} />\n            <HomePage />\n          </div>\n          : (\n            route === \"projects\"\n              ? <div className=\"pages\">\n                <Suspense fallback={<div>Loading...</div>}>\n                  <Navigation className=\"pages\" onRouteChange={onRouteChange} route={route} />\n                  <ProjectsPage />\n                </Suspense>\n              </div>\n              : (\n                route === \"aboutMe\"\n                  ? <div className=\"pages\">\n                    <Suspense fallback={<div>Loading...</div>}>\n                      <Navigation className=\"pages\" onRouteChange={onRouteChange} route={route} />\n                      <AboutMe />\n                    </Suspense>\n                  </div>\n                  : <div className=\"pages\">\n                    <Suspense fallback={<div>Loading...</div>}>\n                      <Navigation className=\"pages\" onRouteChange={onRouteChange} route={route} />\n                      <Contact />\n                    </Suspense>\n                  </div>\n              )\n          )\n      }\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons';\nimport './index.css';\nimport App from '../src/containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.register();\nreportWebVitals();\n"],"sourceRoot":""}